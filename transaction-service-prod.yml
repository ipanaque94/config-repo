server:
  port: 8181

spring:
  application:
    name: transaction-service

  cloud:
    config:
      enabled: true

  redis:
    host: localhost
    port: 6379

  kafka:
    bootstrap-servers: ${KAFKA_BROKER:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: transaction-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true

  data:
    mongodb:
      uri: mongodb+srv://rodasenoc4_db_user:LVDqpURVaOZbfkQz@nnt-distributed-db.effpohk.mongodb.net/nnt-db?retryWrites=true&w=majority&appName=nnt-distributed-db

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

resilience4j:
  circuitbreaker:
    instances:
      transactionCircuitBreaker:
        failureRateThreshold: 50
        slidingWindowSize: 100
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      transactionCircuitBreaker:
        timeoutDuration: 2s

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.enoc.transaction: DEBUG
